<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>padding = 16;

gui_list[0] = "Money: $" + string(global.money);
gui_list[1] = "Health: " + string(get_percent(global.Health, global.maxHealth)) + "%";
gui_list[2] = "Wave: " + string(global.wave);
gui_list[3] = "Score: " + string(global.Score);
gui_list[4] = "Difficulty";
gui_list[5] = "Boss Health";
gui_list[6] = "FPS";

index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_white);
draw_set_font(fnt_gui_12);

gui_list[0] = "Money: $" + string(global.money);
gui_list[1] = "Health: " + string(get_percent(global.Health, global.maxHealth)) + "%";
gui_list[2] = "Wave: " + string(global.wave);
gui_list[3] = "Score: " + string(global.Score);

switch(global.difficulty) {
    case 1:
    gui_list[4] = "Difficulty: Easy";
    break;
    
    case 2:
    gui_list[4] =  "Difficulty: Medium";
    break;
    
    case 3:
    gui_list[4] = "Difficulty: Hard";
    break;
    
    default:
    gui_list[4] = "Difficulty: UN-DEFINED";
    break;
}

if(instance_exists(obj_boss)) {
    gui_list[5] = "Boss Health: " + string(global.bossHealth) + "%";
} else {
    gui_list[5] = "";
}

if(global.show_fps) {
    gui_list[6] = "FPS: " + string(round(fps));
} else {
    gui_list[6] = "";
}

for(var i = 0; i &lt; array_length_1d(gui_list); i++) {
    if(gui_list[i] != "") {
        index++;
    }
    draw_text(view_xview + padding, view_yview + padding * (index + 1), gui_list[i]); 
}
index = 0;

draw_set_defaults();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
